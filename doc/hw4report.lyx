#LyX 1.6.7 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass scrartcl
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Title
A simple but powerful GUI Front-end for GridRover
\end_layout

\begin_layout Subject
CS 3505 Homework 04 Report
\end_layout

\begin_layout Author
Lucas Adam M.
 Paul (00294068), Nathan Hansen (00637655)
\end_layout

\begin_layout Abstract
The Qt Graphics View framework is a powerful tool for visualization in a
 graphical user interface.
 In this paper, we describe the minimal effort it took to transform an existing
 demonstration program (chips) into a simple overhead-view map inteface.
 We explain how this will be useful to a later project (GridRover).
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Section
Intro
\end_layout

\begin_layout Standard
The purpose of this exercise was to familiarize the team with the Qt GUI
 toolkit and its usefulness in creating cross-platform graphical programs.
 Our team strongly desired a project that would not simply be a toy, but
 would actually be useful in some way.
 After some discussion about the following, final project for the term,
 the team decided to work toward a graphical front-end for the planned final
 project, an educational simulation/game.
\end_layout

\begin_layout Standard
GridRover is planned to be a reimplementation of an earlier game called
 Cassini.
 Cassini featured an autonomous rover exploring the surface of Saturn's
 moon, Titan.
 A player would write a program to control this rover for the entire course
 of the game, and points would be awarded for the amount of the surface
 explored and for interesting items returned to the lander for study.
 It made use of a simple, but effective overhead-view map to visualize events
 in the game.
 We planned to create a similar front-end for our eventual implementation
 of GridRover.
\end_layout

\begin_layout Section
Originally Planned Features
\end_layout

\begin_layout Standard
Cassini's GUI included an overhead-view map of the surface of Titan (or
 rather, a randomly generated surface meant to represent a possible Titan).
 The map consisted of a grid of square terrain tiles of equal size.
 The locations of the rover and its lander were indicated on the map with
 icons.
\end_layout

\begin_layout Standard
The goal the team set out to accomplish was fairly modest: A program that
 would display a map of terrain tiles, similar to one Cassini might have
 shown, as dictated by a model.
 A dummy model would be used at first, and would later be replaced with
 some portion of the GridRover game engine.
\end_layout

\begin_layout Standard
We found a suitable Qt demo from which to begin our efforts: The chips demo
 uses a QGraphicsView to display 40,000 vector graphics in an easily scrollable,
 rotatable, and zoomable window.
 Beginning our efforts from here will mean that players will be able to
 zoom, rotate, and scroll their view of Titan without any extra effort on
 our part.
\end_layout

\begin_layout Section
Implemented Features
\end_layout

\begin_layout Standard
By the end of the project, our program generates and displays square maps
 of fixed size.
 Each map is randomly generated by a dummy model when the program runs.
 Each map consists of terrain tiles taken from actual images of Titan's
 surface.
 The program assumes all tiles are the same size, but can operate correctly
 no matter what that size happens to be.
\end_layout

\begin_layout Section
Time Usage
\end_layout

\begin_layout Section
Summary
\end_layout

\end_body
\end_document
